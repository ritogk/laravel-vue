# This is a basic workflow to help you get started with Actions
name: docker-compose

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  laravel-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: compose-run
        run: |
          docker-compose up -d
      - name: create table
        run: |
          sleep 20
          docker-compose exec -T db mysql -uroot -proot -e'create database laravel'
      - name: image seeder download
        run: |
          wget https://github.com/homing-job/laravel-spa/files/6542800/seeder_images.zip
          unzip seeder_images.zip -d project/storage/app/public/images
          rm -f seeder_images.zip
      - name: laravel init
        run: |
          cp project/.env.testing project/.env
          docker-compose exec -T php composer install
          docker-compose exec -T php composer install
          docker-compose exec -T php npm install
          docker-compose exec -T php npm run prod
          docker-compose exec -T php php artisan migrate:refresh --seed
          docker-compose exec -T php php artisan key:generate
          docker-compose exec -T php chmod -R 777 storage
          docker-compose exec -T php chmod -R 777 bootstrap/cache
      - name: laravel test
        run: |
          docker-compose exec -T php php artisan config:clear
          docker-compose exec -T php php vendor/bin/phpstan analyse app --memory-limit=1G
          docker-compose exec -T php php artisan test
          docker-compose exec -T php php artisan dusk
          
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: laravel-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create_bation_private_key
      env:
        BATION_PRIVATE_KEY: ${{ secrets.BATION_PRIVATE_KEY }}
      run: |
        echo "$BATION_PRIVATE_KEY" > bation_private_key && chmod 600 bation_private_key
    - name: deploy_a
      env:
        BATION_HOST_NAME: ${{ secrets.BATION_HOST_NAME }}
        BATION_USER_NAME: ${{ secrets.BATION_USER_NAME }}
        DEPLOY_A_PRIVATE_KEY: ${{ secrets.DEPLOY_A_PRIVATE_KEY }}
        DEPLOY_A_HOST_NAME: ${{ secrets.DEPLOY_A_HOST_NAME }}
        DEPLOY_A_USER_NAME: ${{ secrets.DEPLOY_A_USER_NAME }}
      run: |
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "echo '$DEPLOY_A_PRIVATE_KEY' > deploy_private_key && chmod 600 deploy_private_key"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && sudo git pull origin main'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php composer install'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php npm install'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php npm run prod'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan migrate --force'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan cache:clear'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan config:clear'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_A_USER_NAME}@${DEPLOY_A_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan route:clear'"
    - name: deploy_c
      env:
        BATION_HOST_NAME: ${{ secrets.BATION_HOST_NAME }}
        BATION_USER_NAME: ${{ secrets.BATION_USER_NAME }}
        DEPLOY_C_PRIVATE_KEY: ${{ secrets.DEPLOY_C_PRIVATE_KEY }}
        DEPLOY_C_HOST_NAME: ${{ secrets.DEPLOY_C_HOST_NAME }}
        DEPLOY_C_USER_NAME: ${{ secrets.DEPLOY_C_USER_NAME }}
      run: |
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "echo '$DEPLOY_C_PRIVATE_KEY' > deploy_private_key && chmod 600 deploy_private_key"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && sudo git pull origin main'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php composer install'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php npm install'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php npm run prod'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan migrate --force'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan cache:clear'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan config:clear'"
        ssh -o StrictHostKeyChecking=no -i bation_private_key ${BATION_USER_NAME}@${BATION_HOST_NAME} "ssh -i deploy_private_key ${DEPLOY_C_USER_NAME}@${DEPLOY_C_HOST_NAME} 'cd ~/laravel-spa && docker-compose exec -T php php artisan route:clear'"
