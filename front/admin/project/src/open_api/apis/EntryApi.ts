/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Tutorial
 * OpenAPI Tutorial by halhorn
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Entry,
    EntryFromJSON,
    EntryToJSON,
    RequestEntry,
    RequestEntryFromJSON,
    RequestEntryToJSON,
    ResponseJobEntry,
    ResponseJobEntryFromJSON,
    ResponseJobEntryToJSON,
} from '../models';

export interface EntriesGetRequest {
    jobId?: number;
    jobCategoryId?: number;
    userName?: string;
    selfPr?: string;
}

export interface EntriesPostRequest {
    requestEntry?: RequestEntry;
}

/**
 * EntryApi - interface
 * 
 * @export
 * @interface EntryApiInterface
 */
export interface EntryApiInterface {
    /**
     * 詳細内容
     * @summary 一覧取得
     * @param {number} [jobId] 仕事id
     * @param {number} [jobCategoryId] 仕事カテゴリid
     * @param {string} [userName] ユーザー名
     * @param {string} [selfPr] 自己PR
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EntryApiInterface
     */
    entriesGetRaw(requestParameters: EntriesGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ResponseJobEntry>>>;

    /**
     * 詳細内容
     * 一覧取得
     */
    entriesGet(requestParameters: EntriesGetRequest, initOverrides?: RequestInit): Promise<Array<ResponseJobEntry>>;

    /**
     * 詳細内容
     * @summary 応募 追加
     * @param {RequestEntry} [requestEntry] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EntryApiInterface
     */
    entriesPostRaw(requestParameters: EntriesPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Entry>>;

    /**
     * 詳細内容
     * 応募 追加
     */
    entriesPost(requestParameters: EntriesPostRequest, initOverrides?: RequestInit): Promise<Entry>;

}

/**
 * 
 */
export class EntryApi extends runtime.BaseAPI implements EntryApiInterface {

    /**
     * 詳細内容
     * 一覧取得
     */
    async entriesGetRaw(requestParameters: EntriesGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ResponseJobEntry>>> {
        const queryParameters: any = {};

        if (requestParameters.jobId !== undefined) {
            queryParameters['jobId'] = requestParameters.jobId;
        }

        if (requestParameters.jobCategoryId !== undefined) {
            queryParameters['jobCategoryId'] = requestParameters.jobCategoryId;
        }

        if (requestParameters.userName !== undefined) {
            queryParameters['userName'] = requestParameters.userName;
        }

        if (requestParameters.selfPr !== undefined) {
            queryParameters['selfPr'] = requestParameters.selfPr;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/entries`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ResponseJobEntryFromJSON));
    }

    /**
     * 詳細内容
     * 一覧取得
     */
    async entriesGet(requestParameters: EntriesGetRequest, initOverrides?: RequestInit): Promise<Array<ResponseJobEntry>> {
        const response = await this.entriesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 詳細内容
     * 応募 追加
     */
    async entriesPostRaw(requestParameters: EntriesPostRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Entry>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerFront", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/entries`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RequestEntryToJSON(requestParameters.requestEntry),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntryFromJSON(jsonValue));
    }

    /**
     * 詳細内容
     * 応募 追加
     */
    async entriesPost(requestParameters: EntriesPostRequest, initOverrides?: RequestInit): Promise<Entry> {
        const response = await this.entriesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
